// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using examen_kilian_aiello.Data;

#nullable disable

namespace NotesPosting.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220113091352_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("examen_kilian_aiello.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AuthorId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("examen_kilian_aiello.Models.Note", b =>
                {
                    b.Property<int>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("IdAuthor")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdTag")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("NoteId");

                    b.HasIndex("IdAuthor");

                    b.HasIndex("IdTag");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("examen_kilian_aiello.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("examen_kilian_aiello.Models.Note", b =>
                {
                    b.HasOne("examen_kilian_aiello.Models.Author", "Author")
                        .WithMany("Notes")
                        .HasForeignKey("IdAuthor");

                    b.HasOne("examen_kilian_aiello.Models.Tag", "Tag")
                        .WithMany("Notes")
                        .HasForeignKey("IdTag");

                    b.Navigation("Author");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("examen_kilian_aiello.Models.Author", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("examen_kilian_aiello.Models.Tag", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
